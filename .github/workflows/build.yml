name: Build Windows Application

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Permite ejecutar el workflow manualmente desde la interfaz de GitHub

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # Actualizado a v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build with PyInstaller
      run: |
        # Verificar si el archivo spec existe
        if (Test-Path "facturacion_app.spec") {
          pyinstaller --clean facturacion_app.spec
        } else {
          # Si no existe el archivo spec, crear uno sobre la marcha
          pyinstaller --name="Sistema de Facturacion" --windowed --add-data="data;data" app/main.py
        }
      
    - name: Create ZIP archive
      run: |
        Compress-Archive -Path "dist/Sistema de Facturacion" -DestinationPath "Sistema_de_Facturacion_Windows.zip"
      
    - name: Upload build artifact
      uses: actions/upload-artifact@v4  # Actualizado a v4
      with:
        name: windows-build
        path: Sistema_de_Facturacion_Windows.zip
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: Sistema_de_Facturacion_Windows.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}